<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations">
    		<list>
    			<value>classpath:DATASOURCE_CONFIG.properties</value>
    		</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${com.jomolangma.app.driver}" />
        <property name="url" value="${com.jomolangma.app.url}" />
        <property name="username" value="${com.jomolangma.app.username}" />
        <property name="password" value="${com.jomolangma.app.password}" />
    </bean>
    
    <!-- 配置Jdbc模板 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	-->
	 
	<!-- sqlSession配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:SQL_MAP_SERVICE_CONFIG.xml" />
	</bean>
	
	<bean id="myBatisDAO" class="com.jomolangma.app.mybatis.dao.MyBatisDAO">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	</bean>

	<!-- 事务管理器配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>

	<!-- 切面配置,通过代理的方式实现 -->
	<bean id="autoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<!-- 表示所有以Service结尾的bean全部应用下面的拦截器 -->
				<value>*Service</value>
				<!-- 表示所有以ServiceImpl结尾的bean全部应用下面的拦截器 -->
				<value>*ServiceImpl</value>
			</list>
		</property>
		<!-- 包括事务拦截器,方法调用日志拦截器,以及参数检查拦截器 -->
		<property name="interceptorNames">
			<list>
				<idref local="transactionInterceptor" />
			</list>
		</property>
	</bean>
</beans>